{"ast":null,"code":"var _jsxFileName = \"/home/muhibullahkamali/REACT/expense-tracker-app/src/Context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer'; //Now we create initial state\n\nconst initialState = {\n  transactions: []\n}; //Now we create a global context\n\nexport const GlobalContext = createContext(initialState); //Now if we want to use this in other components first we need to create \"Provider Component\".\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); //Now Here we create a action for Delete Transaction\n\n  const deleteTransaction = id => {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }; //Now Here we create a action for Add transaction\n\n\n  const addTransaction = transaction => {\n    dispatch({\n      type: 'Add_TRANSACTION',\n      payload: transaction\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, children); //So first we provide the context then we use it anywhere with \"consumer\" keyword.\n}; //Before we consume it in other child-components we need to create our reducer first","map":{"version":3,"sources":["/home/muhibullahkamali/REACT/expense-tracker-app/src/Context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","initialState","transactions","GlobalContext","GlobalProvider","children","state","dispatch","deleteTransaction","id","type","payload","addTransaction","transaction"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,aAAjB,EAAiCC,UAAjC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AADG,CAArB,C,CAIA;;AAEA,OAAO,MAAMC,aAAa,GAAGL,aAAa,CAACG,YAAD,CAAnC,C,CAEP;;AAEA,OAAO,MAAMG,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAASC,QAAT,IAAqBR,UAAU,CAACC,UAAD,EAAcC,YAAd,CAArC,CAD8C,CAG5C;;AACF,QAAMO,iBAAiB,GAAIC,EAAD,IAAQ;AAChCF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GALD,CAJ8C,CAW5C;;;AACF,QAAMG,cAAc,GAAIC,WAAD,IAAiB;AACtCN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAI;AACvCX,MAAAA,YAAY,EAAGI,KAAK,CAACJ,YADkB;AAEvCM,MAAAA,iBAFuC;AAGvCI,MAAAA;AAHuC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKFP,QALE,CAAR,CAnB8C,CA0B5C;AAEH,CA5BM,C,CA6BP","sourcesContent":["import React , { createContext , useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n//Now we create initial state\n\n\nconst initialState = {\n    transactions: []\n}\n\n//Now we create a global context\n\nexport const GlobalContext = createContext(initialState);\n\n//Now if we want to use this in other components first we need to create \"Provider Component\".\n\nexport const GlobalProvider = ({ children }) => {\n  const [state , dispatch] = useReducer(AppReducer , initialState);\n\n    //Now Here we create a action for Delete Transaction\n  const deleteTransaction = (id) => {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n    //Now Here we create a action for Add transaction\n  const addTransaction = (transaction) => {\n    dispatch({\n      type: 'Add_TRANSACTION',\n      payload: transaction\n    });\n  }\n  \n  return (<GlobalContext.Provider value = {{\n    transactions : state.transactions,\n    deleteTransaction,\n    addTransaction\n  }}>\n       {children}\n  </GlobalContext.Provider>);\n    //So first we provide the context then we use it anywhere with \"consumer\" keyword.\n\n}\n//Before we consume it in other child-components we need to create our reducer first"]},"metadata":{},"sourceType":"module"}